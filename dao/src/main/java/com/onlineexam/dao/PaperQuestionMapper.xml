<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlineexam.dao.PaperQuestionMapper">
  <resultMap id="BaseResultMap" type="com.onlineexam.pojo.PaperQuestion">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="paper_id" jdbcType="BIGINT" property="paperId" />
    <result column="question_id" jdbcType="BIGINT" property="questionId" />
    <result column="question_desc" jdbcType="VARCHAR" property="questionDesc" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="diff" jdbcType="INTEGER" property="diff" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="gmt_created" jdbcType="TIMESTAMP" property="gmtCreated" />
    <result column="gmt_updated" jdbcType="TIMESTAMP" property="gmtUpdated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, paper_id, question_id, question_desc, question_type, diff, score, state, gmt_created, 
    gmt_updated
  </sql>
  <select id="selectByExample" parameterType="com.onlineexam.pojo.PaperQuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from paper_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paper_question
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from paper_question
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.onlineexam.pojo.PaperQuestionExample">
    delete from paper_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.onlineexam.pojo.PaperQuestion">
    insert into paper_question (id, paper_id, question_id, 
      question_desc, question_type, diff, 
      score, state, gmt_created, 
      gmt_updated)
    values (#{id,jdbcType=BIGINT}, #{paperId,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT}, 
      #{questionDesc,jdbcType=VARCHAR}, #{questionType,jdbcType=INTEGER}, #{diff,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{gmtCreated,jdbcType=TIMESTAMP}, 
      #{gmtUpdated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.onlineexam.pojo.PaperQuestion">
    insert into paper_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paperId != null">
        paper_id,
      </if>
      <if test="questionId != null">
        question_id,
      </if>
      <if test="questionDesc != null">
        question_desc,
      </if>
      <if test="questionType != null">
        question_type,
      </if>
      <if test="diff != null">
        diff,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="gmtCreated != null">
        gmt_created,
      </if>
      <if test="gmtUpdated != null">
        gmt_updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="paperId != null">
        #{paperId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionDesc != null">
        #{questionDesc,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="diff != null">
        #{diff,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null">
        #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.onlineexam.pojo.PaperQuestionExample" resultType="java.lang.Long">
    select count(*) from paper_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update paper_question
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.paperId != null">
        paper_id = #{record.paperId,jdbcType=BIGINT},
      </if>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=BIGINT},
      </if>
      <if test="record.questionDesc != null">
        question_desc = #{record.questionDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.questionType != null">
        question_type = #{record.questionType,jdbcType=INTEGER},
      </if>
      <if test="record.diff != null">
        diff = #{record.diff,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreated != null">
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdated != null">
        gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update paper_question
    set id = #{record.id,jdbcType=BIGINT},
      paper_id = #{record.paperId,jdbcType=BIGINT},
      question_id = #{record.questionId,jdbcType=BIGINT},
      question_desc = #{record.questionDesc,jdbcType=VARCHAR},
      question_type = #{record.questionType,jdbcType=INTEGER},
      diff = #{record.diff,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.onlineexam.pojo.PaperQuestion">
    update paper_question
    <set>
      <if test="paperId != null">
        paper_id = #{paperId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null">
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="questionDesc != null">
        question_desc = #{questionDesc,jdbcType=VARCHAR},
      </if>
      <if test="questionType != null">
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="diff != null">
        diff = #{diff,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="gmtCreated != null">
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null">
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.onlineexam.pojo.PaperQuestion">
    update paper_question
    set paper_id = #{paperId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      question_desc = #{questionDesc,jdbcType=VARCHAR},
      question_type = #{questionType,jdbcType=INTEGER},
      diff = #{diff,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>